project_name  : SSLAD-2D
train_set     : train
val_set       : val
num_gpus      : 0
compound_coef : 0                               # coefficients of efficientdet or model size, choices 0,1,2,3,4,5,6,7
mean          : [ 0.485, 0.456, 0.406 ]         # mean and std in RGB order, actually this part should remain unchanged as long as your dataset is similar to coco.
std           : [ 0.229, 0.224, 0.225 ]
anchors_scales: '[2 ** 0, 2 ** (1.0 / 3.0), 2 ** (2.0 / 3.0)]'  # this anchor is adapted to the dataset
anchors_ratios: '[(0.7, 1.4), (1.0, 1.0), (1.5, 0.7)]'
# saving results to wandb and local dir
wandb         : False                   # save results to wandb, set False if you don't want to log to wandb  
project       : SSLAD-2D                # metrics will be log to wandb {project} and run {run_name}
run_name      : efficient-det-0         # results will be saved to runs/project/run_name in local directory

# training configuration
train :
  num_workers   : 10                           # num_workers of dataloader
  batch_size    : 10                           # number of images per batch among all devices
  head_only     : False                       # whether finetunes only the regressor and the classifier,useful in early stage convergence or small/easy dataset
  lr            : 0.0001                      # leaning rate
  optim         : adamw                       # select optimizer for training, suggest using admaw until the very final stage then switch to sgd
  num_epochs    : 100
  val_interval  : 1                           # Number of epoches between validation phases
  save_interval : 500                         # Number of steps between saving
  es_min_delta  : 0.0                         # Early stoppins parameter: minimum change loss to qualify as an improvement
  es_patience   : 0                           # Early stopping parameter: number of epochs with no improvement after which training will be stopped. Set to 0 to disable this technique.
  data_path     : ./datasets/ # the root folder of dataset
  #log_path      : logs
  load_weights  : weights/efficientdet-d0.pth      # whether to load weights from a checkpoint, set None to initialize, set \'last\' to load last checkpoint')
  saved_path    : runs                        # root path to save the training results
  debug         : False                       # whether visualize the predicted boxes of training,'the output images will be in test/')

# val configuration
test :
  weight        : weights/efficientdet-d0.pth # efficientdet-d0.pth, efficientdet-d1.pth, efficientdet-d2.pth, efficientdet-d3.pth, efficientdet-d4.pth
  num_workers   : 2                           # num_workers of dataloader
  batch_size    : 10                          # number of images per batch among all devices
  conf_thres    : 0.5
  nms_thres     : 0.5
  device        : cpu
  use_float16   : False


# inference configuration
inference :
  weight        : weights/efficientdet-d0.pth  # efficientdet-d0.pth, efficientdet-d1.pth, efficientdet-d2.pth, efficientdet-d3.pth, efficientdet-d4.pth
  source        : datasets/demo.jpg       # image or video to run inference
  conf_thres    : 0.5
  nms_thres     : 0.5
  show          : False
  save          : True
  use_float16   : False

# classes
 obj_list      : [ 'Pedestrian', 'Cyclist', 'Car',  'Truck', 'Tram', 'Tricycle' ]
# coco
# obj_list: ['person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus', 'train', 'truck', 'boat', 'traffic light',
#            'fire hydrant', '', 'stop sign', 'parking meter', 'bench', 'bird', 'cat', 'dog', 'horse', 'sheep',
#            'cow', 'elephant', 'bear', 'zebra', 'giraffe', '', 'backpack', 'umbrella', '', '', 'handbag', 'tie',
#            'suitcase', 'frisbee', 'skis', 'snowboard', 'sports ball', 'kite', 'baseball bat', 'baseball glove',
#            'skateboard', 'surfboard', 'tennis racket', 'bottle', '', 'wine glass', 'cup', 'fork', 'knife', 'spoon',
#            'bowl', 'banana', 'apple', 'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza', 'donut',
#            'cake', 'chair', 'couch', 'potted plant', 'bed', '', 'dining table', '', '', 'toilet', '', 'tv',
#            'laptop', 'mouse', 'remote', 'keyboard', 'cell phone', 'microwave', 'oven', 'toaster', 'sink',
#            'refrigerator', '', 'book', 'clock', 'vase', 'scissors', 'teddy bear', 'hair drier',
#            'toothbrush']